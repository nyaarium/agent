FROM debian:trixie

# Switch to apt noninteractive
ENV DEBIAN_FRONTEND=noninteractive

RUN apt update && apt install -y locales tzdata && apt clean -y && rm -rf /var/lib/apt/lists/* \
    && sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen \
    && locale-gen en_US.UTF-8 \
    && update-locale LANG=en_US.UTF-8 \
    && ln -fs /usr/share/zoneinfo/America/Los_Angeles /etc/localtime \
    && echo "America/Los_Angeles" > /etc/timezone
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# General development tools
RUN apt update && apt install -y \
	bash-completion \
	curl \
	gcc \
	git \
	gpg \
	htop \
	iftop \
	jq \
	less \
	make \
	man \
	neovim \
	net-tools \
	procps \
	rsync \
	screen \
	slurm \
	sudo \
	tmux \
	tree \
	unzip \
	uuid \
	vim \
	wget \
	&& apt autoremove --purge -y \
	&& apt clean -y && rm -rf /var/lib/apt/lists/*

# Install Cursor agent
RUN curl -fsSL https://cursor.com/install | bash

RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | gpg --dearmor -o /etc/apt/keyrings/githubcli-archive-keyring.gpg \
	&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" > /etc/apt/sources.list.d/github-cli.list \
	&& apt update && apt install -y gh \
	&& apt clean && rm -rf /var/lib/apt/lists/*

RUN NODE_MAJOR=22 \
	&& curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
	&& echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
	&& apt update && apt install -y nodejs \
	&& corepack enable \
	&& corepack prepare yarn@stable --activate \
	&& apt clean && rm -rf /var/lib/apt/lists/*

# Install Xvfb and X11 utilities for headless rendering
RUN apt update && apt install -y \
	xvfb \
	x11-utils \
	mesa-utils \
	x11-apps \
	&& apt clean && rm -rf /var/lib/apt/lists/*

# Install .NET SDK
RUN wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \
	&& dpkg -i packages-microsoft-prod.deb \
	&& rm packages-microsoft-prod.deb \
	&& apt update \
	&& apt install -y dotnet-sdk-8.0 \
	&& apt clean && rm -rf /var/lib/apt/lists/*

# Install Godot runtime dependencies
RUN apt update && apt install -y \
	libasound2 \
	libdbus-1-3 \
	libdecor-0-0 \
	libdrm2 \
	libegl1 \
	libfontconfig1 \
	libgbm1 \
	libgl1 \
	libglu1-mesa \
	libgtk-3-0 \
	libpulse0 \
	libudev1 \
	libwayland-client0 \
	libwayland-cursor0 \
	libwayland-egl1 \
	libx11-6 \
	libxcomposite1 \
	libxcursor1 \
	libxdamage1 \
	libxext6 \
	libxfixes3 \
	libxi6 \
	libxinerama1 \
	libxkbcommon0 \
	libxrandr2 \
	libxrender1 \
	libxss1 \
	libxtst6 \
	libxxf86vm1 \
	&& apt clean && rm -rf /var/lib/apt/lists/*

# Install Godot
ENV GODOT_VERSION="4.2.2"
RUN wget -O /tmp/godot.zip https://github.com/godotengine/godot/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_linux.x86_64.zip \
	&& unzip /tmp/godot.zip -d /tmp \
	&& mv /tmp/Godot_v${GODOT_VERSION}-stable_linux.x86_64 /usr/local/bin/godot \
	&& chmod +x /usr/local/bin/godot \
	&& rm -rf /tmp/godot.zip

# Switch back to dialog for user's use of apt
ENV DEBIAN_FRONTEND=dialog

# Add agent user
RUN groupadd -r agent \
	&& useradd -rs /bin/bash -m -g agent agent \
	&& echo "agent:agent" | chpasswd \
	&& echo "agent ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/agent

COPY .bashrc-root /root/.bashrc
COPY .bashrc-user /home/agent/.bashrc
